#TagBegin=
#TagEnd=
#CommentBegin1=(*
#CommentEnd1=*)
#LineComment1=
#CommentBegin2=
#CommentEnd2=
#LineComment2=
#SpecialSyntax=None
#ScriptBegin=
#ScriptEnd=
#QuoteSingle=False
#QuoteDouble=True
#QuoteContinue=True
#EscapeCharacter=\

#Word Color=0, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
and
as
asr
assert
begin
class
constraint
do
done
downto
else
end
exception
external
false
for
fun
function
functor
if
in
include
inherit
initializer
land
lazy
let
lor
lsl
lsr
lxor
match
method
mod
module
mutable
new
object
of
open
or
parser
private
rec
sig
struct
then
to
true
try
type
val
virtual
when
while
with

#Word Color=1, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
array
bool
char
exn
float
format4
format6
fpclass
in_channel
int
int32
int64
lazy_t
list
nativeint
open_flag
option
out_channel
ref
string
unit

#Word Color=2, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
Assert_failure
Division_by_zero
End_of_file
Exit
Failure
Invalid_argument
Match_failure
Not_found
Out_of_memory
Stack_overflow
Sys_blocked_io
Sys_error
Undefined_recursive_module

#Word Color=3, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
FP_infinite
FP_nan
FP_normal
FP_subnormal
FP_zero
None
Open_append
Open_binary
Open_creat
Open_excl
Open_nonblock
Open_rdonly
Open_text
Open_trunc
Open_wronly
Some
false
true

#Word Color=4, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
abs
abs_float
acos
asin
at_exit
atan
atan2
bool_of_string
ceil
char_of_int
classify_float
close_in
close_in_noerr
close_out
close_out_noerr
compare
cos
cosh
decr
do_at_exit
epsilon_float
exit
exp
expm1
failwith
float
float_of_int
float_of_string
floor
flush
flush_all
format_of_string
frexp
fst
ignore
in_channel_length
incr
infinity
input
input_binary_int
input_byte
input_char
input_line
input_value
int_of_char
int_of_float
int_of_string
invalid_arg
ldexp
lnot
log
log10
log1p
max
max_float
max_int
min
min_float
min_int
mod_float
modf
nan
neg_infinity
not
open_in
open_in_bin
open_in_gen
open_out
open_out_bin
open_out_gen
out_channel_length
output
output_binary_int
output_byte
output_char
output_string
output_value
pos_in
pos_out
pred
prerr_char
prerr_endline
prerr_float
prerr_int
prerr_newline
prerr_string
print_char
print_endline
print_float
print_int
print_newline
print_string
raise
read_float
read_int
read_line
really_input
ref
seek_in
seek_out
set_binary_mode_in
set_binary_mode_out
sin
sinh
snd
sqrt
stderr
stdin
stdout
string_of_bool
string_of_float
string_of_format
string_of_int
succ
tan
tanh
truncate
unsafe_really_input
valid_float_lexem

#Word Color=5, WholeWord=False, RightSide=True, MatchCase=False, InsideTag=False, RegEx=True
^^^#
