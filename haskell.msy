#TagBegin=
#TagEnd=
#CommentBegin1=
#CommentEnd1=
#LineComment1=--
#CommentBegin2=
#CommentEnd2=
#LineComment2=
#SpecialSyntax=None
#ScriptBegin=
#ScriptEnd=
#QuoteSingle=True
#QuoteDouble=True
#QuoteContinue=False
#EscapeCharacter=\

#Word Color=0, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
_
case
class
data
default
deriving
do
else
foreign
if
import
in
infix
infixl
infixr
instance
let
module
newtype
of
then
type
where

#Word Color=1, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
Bool
Char
Double
Either
FilePath
Float
IO
IOError
Int
Integer
Maybe
Ordering
Rational
ReadS
ShowS
String

#Word Color=2, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
Bounded
Enum
Eq
Floating
Fractional
Functor
Integral
Monad
Num
Ord
Read
Real
RealFloat
RealFrac
Show

#Word Color=3, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
EQ
False
GT
Just
LT
Left
Nothing
Right
True

#Word Color=4, WholeWord=True, RightSide=False, MatchCase=True, InsideTag=False, RegEx=False
abs
acos
acosh
all
and
any
appendFile
asTypeOf
asin
asinh
atan
atan2
atanh
break
ceiling
compare
concat
concatMap
const
cos
cosh
curry
cycle
decodeFloat
div
divMod
drop
dropWhile
either
elem
encodeFloat
enumFrom
enumFromThen
enumFromThenTo
enumFromTo
error
even
exp
exponent
fail
filter
flip
floatDigits
floatRadix
floatRange
floor
fmap
foldl
foldl1
foldr
foldr1
fromEnum
fromInteger
fromIntegral
fromRational
fst
gcd
getChar
getContents
getLine
head
id
init
interact
ioError
isDenormalized
isIEEE
isInfinite
isNaN
iterate
last
lcm
length
lex
lines
log
logBase
lookup
map
mapM
mapM_
max
maxBound
maximum
maybe
min
minBound
minimum
mod
negate
not
notElem
null
odd
or
otherwise
pi
pred
print
product
properFraction
putChar
putStr
putStrLn
quot
quotRem
read
readFile
readIO
readList
readLn
readParen
reads
readsPrec
realToFrac
recip
rem
repeat
replicate
return
reverse
round
scaleFloat
scanl
scanl1
scanr
scanr1
seq
sequence
sequence_
show
showChar
showList
showParen
showPrec
showString
shows
significand
signum
sin
sinh
snd
span
splitAt
sqrt
subtract
succ
sum
tail
take
takeWhile
tan
tanh
toEnum
toInteger
toRational
truncate
uncurry
undefined
unlines
until
unwords
unzip
unzip3
userError
words
writeFile
zip
zip3
zipWith
